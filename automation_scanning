#!/usr/bin/env python3

import subprocess
import argparse
import os

def run_nmap(target):
    print(f"[+] Running Nmap scan on {target}...")
    nmap_output = "nmap_scan.txt"
    subprocess.run(["nmap", "-sV", "-oN", nmap_output, target])
    print(f"[+] Nmap scan saved to {nmap_output}")

def run_nikto(target):
    print("[+] Running Nikto scan on {target}...")
    nikto_output = "nikto_scan.txt"
    subprocess.run(["nikto", "-h", target, "-output", nikto_output])
    print("[+] Nikto scan saved to {nikto_output}")

def run_sslscan(target):
    print("[+] Running SSlScan scan on {target}...")
    subprocess.run(["sslscan", "-h", target])

def run_bloodhound(target,username,password):
    print(f"[+] Running BloodHound scan on {target}...")
    subprocess.run([username,password,target])
    print("[+] Bloodhound scan complete")

def run_Kerbrute(target, username_kerbrute):
    #print(f"[+] Running Kerbrute scan on {target}...")
    #subprocess.run(["kerbrute", "userenum", "-d", username_kerbrute, target])
    #print("[+] Kerbrute scan complete")

def run_BEEF(beef_URL):
    print(f"Browser Explointation Framework running scan on {beef_URL}")
    subprocess.run(["BEEF-XSS/CSRF", "-h", beef_URL])
    print("Browser explotation framework scan completed")

def run_uniscan(target):
    print(f"Uniscan running scan on {target}")
    uniscan_output = "uniscan_scan.txt"
    subprocess.run(["uniscan", "-u", target, "-o", uniscan_output])
    print(f"[+] Uniscan scan saved to {uniscan_output}")


def main():
    parser = argparse.ArgumentParser(description="Automate scans")
    parser.add_argument("target", help="Target IP or domain")
    parser.add_argument("username", help="Username for BloodHound")
    parser.add_argument("Password", help="Password for BloodHound")
    parser.add_argument("username_kerbrute", help="Username for Kerbrute")
    parser.add_argument("beef_URL", help="Website for BEEF")
    args = parser.parse_args()

    run_nmap(args.target)
    run_nikto(args.target)
    run_sslscan(args.target)
    run_bloodhound( args.target, args.username, args.password)
    run_Kerbrute( args.target, args.username_kerbrute)
    run_BEEF(args.beef_URL)
    run_uniscan(args.target)

if __name__ == "__main__":
    main()
